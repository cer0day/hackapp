-- phpMyAdmin SQL Dump
-- version 5.2.0
-- https://www.phpmyadmin.net/
--
-- Servidor: 127.0.0.1
-- Tiempo de generación: 21-07-2022 a las 03:22:30
-- Versión del servidor: 10.4.24-MariaDB
-- Versión de PHP: 8.1.6

SET SQL_MODE = "NO_AUTO_VALUE_ON_ZERO";
START TRANSACTION;
SET time_zone = "+00:00";


/*!40101 SET @OLD_CHARACTER_SET_CLIENT=@@CHARACTER_SET_CLIENT */;
/*!40101 SET @OLD_CHARACTER_SET_RESULTS=@@CHARACTER_SET_RESULTS */;
/*!40101 SET @OLD_COLLATION_CONNECTION=@@COLLATION_CONNECTION */;
/*!40101 SET NAMES utf8mb4 */;

--
-- Base de datos: `hacking`
--

-- --------------------------------------------------------

--
-- Estructura de tabla para la tabla `comandos`
--

CREATE TABLE `comandos` (
  `id_comando` int(11) NOT NULL,
  `etiquetas` varchar(300) NOT NULL,
  `comando` varchar(500) NOT NULL,
  `descripcion` varchar(500) NOT NULL,
  `detalles` varchar(500) NOT NULL,
  `id_fase` int(11) NOT NULL,
  `id_herramienta` int(11) NOT NULL
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;

--
-- Volcado de datos para la tabla `comandos`
--

INSERT INTO `comandos` (`id_comando`, `etiquetas`, `comando`, `descripcion`, `detalles`, `id_fase`, `id_herramienta`) VALUES
(12, 'DNS, subdominios, dominios', '<li>recon-ng</li>\r\n<li>db insert examen.org</li>\r\n<li>modules load recon/domains-contacts/whois_pocs</li>\r\n<li>run</li>', 'Busqueda informacion sobre dominios y sub-dominios', '<li>#Para eliminar un subdominio\r\n<li>db delete domains \"numero del dominio\"</li>\r\n<li>#Para ver contactos</li>\r\n<li>show contacts</li>\r\n<li>#Para ver hosts el modulo</li>\r\n<li>recon/domains-hosts/bing_domain_web</li\r\n<li>Tambien se puede usar el modulo (recon/domains-hosts/hackertarget</li>\r\n<li>#Para instalar un modulo</li>\r\n<li>marketplace install \"path del modulo\"</li>', 4, 12),
(13, 'hosts, segmento de red, subnet', 'nmap 0.0.0.0/24 | tee resultado.txt', 'Escaneo de hosts desde 0 a 254', '<li>En el archivo muestra las IP, puerto, servicio y estado</li>', 4, 1),
(14, 'Sistema Operativo', 'nmap -A 0.0.0.0 | tee resultado.txt', 'Escaneo del sistema operativo de un host, servicios', '<li>Tambien muestra puertos, servicios y version del servicio</li>', 4, 1),
(15, 'puertos, segmento de red, subnet', 'nmap -T4 -F 0.0.0.* | tee resultado.txt', 'Escaneo de puertos en una subnet en forma rapida', '<li>Es posible que no detecte todos los puertos</li>', 4, 1),
(16, 'vulnerabilidades', 'nikto -host www.web.com', 'Escaneo de vulnerabilidades (RFI, directorios, Archivos)', '<li>Encuentra directorios, archivos</li>', 4, 13),
(17, 'CVE,vulnerabilidades', 'nmap -sV -script=vulners.nse 0.0.0.0', 'Escaneo de vulnerabilidades y muestra CVE asociados', '<li>comming</li>', 4, 1),
(18, 'ataque de diccionario, hash, MD5, sha256', '<li>john hashes.txt --format=Raw-MD5 --wordlist=diccionario.txt</li>\r\n<li>john hashes.txt --show --format=Raw-MD5\r\n</li>', 'Ataque de diccionario a hash MD5', '<li>Si ejecutas dos veces el mismo comando ya no mostrará el resultado, por lo que se tienen que ejecutar el comando 2 para observar los hashes obtenidos previamente</li>\r\n', 6, 14),
(19, 'ataque de diccionario, hash, MD5, sha256', 'hashcat -m 0 -a 0 hash.txt rockyou.txt', 'Ataque de diccionario a hash (MD5...)', '<li>Si ejecutas dos veces el comando ya no te muestra los hashes, porque ya los tiene almacenados, para verlos utiliza el comando dos</li>', 6, 15),
(20, '', 'sudo unicornscan 0.0.0.0', 'Escaneo de servicios y puertos ', '<li></li>', 4, 16),
(21, 'vulnerabilidades, CVE, exploits,', 'Legion (Interfaz grafica)', 'Escaneo de puertos, servicios, version de servicios, CVE, usuarios y contraseñas, exploits.', '<li>Interfaz grafica</li>', 4, 17),
(22, 'identificar hash', 'hash-identifier', 'Identifica a que algoritmo corresponde un hash', '<li></li>', 6, 18),
(23, 'ftp,diccionario,21', 'hydra -L diccionario.txt -P diccionario.txt ftp://0.0.0.0', 'Ataque de diccionario a servicio FTP', '', 3, 19),
(24, 'wifi, diccionario, pcap', 'aircrack-ng -w diccionario.txt archivo.pcap ', 'Ataque de diccionario a archivo pcap para buscar clave WIFI', '', 3, 20);

-- --------------------------------------------------------

--
-- Estructura de tabla para la tabla `fases`
--

CREATE TABLE `fases` (
  `id_fase` int(11) NOT NULL,
  `nombre_fase` varchar(50) NOT NULL
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;

--
-- Volcado de datos para la tabla `fases`
--

INSERT INTO `fases` (`id_fase`, `nombre_fase`) VALUES
(1, 'Reversing'),
(2, 'Forencia'),
(3, 'Explotacion'),
(4, 'Reconocimiento'),
(5, 'Esteganografía'),
(6, 'Criptografia'),
(7, 'OSINT');

-- --------------------------------------------------------

--
-- Estructura de tabla para la tabla `herramientas`
--

CREATE TABLE `herramientas` (
  `id_herramienta` int(11) NOT NULL,
  `nombre_herramienta` varchar(50) NOT NULL,
  `ayuda_herramienta` text NOT NULL
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;

--
-- Volcado de datos para la tabla `herramientas`
--

INSERT INTO `herramientas` (`id_herramienta`, `nombre_herramienta`, `ayuda_herramienta`) VALUES
(1, 'Nmap', '(+[no]aaflag))+retry=### \r\nNmap 7.92 ( https://nmap.org )\r\nUsage: nmap [Scan Type(s)] [Options] {target specification}\r\nTARGET SPECIFICATION:\r\n  Can pass hostnames, IP addresses, networks, etc.\r\n  Ex: scanme.nmap.org, microsoft.com/24, 192.168.0.1; 10.0.0-255.1-254\r\n  -iL <inputfilename>: Input from list of hosts/networks\r\n  -iR <num hosts>: Choose random targets\r\n  --exclude <host1[,host2][,host3],...>: Exclude hosts/networks\r\n  --excludefile <exclude_file>: Exclude list from file\r\nHOST DISCOVERY:\r\n  -sL: List Scan - simply list targets to scan\r\n  -sn: Ping Scan - disable port scan\r\n  -Pn: Treat all hosts as online -- skip host discovery\r\n  -PS/PA/PU/PY[portlist]: TCP SYN/ACK, UDP or SCTP discovery to given ports\r\n  -PE/PP/PM: ICMP echo, timestamp, and netmask request discovery probes\r\n  -PO[protocol list]: IP Protocol Ping\r\n  -n/-R: Never do DNS resolution/Always resolve [default: sometimes]\r\n  --dns-servers <serv1[,serv2],...>: Specify custom DNS servers\r\n  --system-dns: Use OS\'s DNS resolver\r\n  --traceroute: Trace hop path to each host\r\nSCAN TECHNIQUES:\r\n  -sS/sT/sA/sW/sM: TCP SYN/Connect()/ACK/Window/Maimon scans\r\n  -sU: UDP Scan\r\n  -sN/sF/sX: TCP Null, FIN, and Xmas scans\r\n  --scanflags <flags>: Customize TCP scan flags\r\n  -sI <zombie host[:probeport]>: Idle scan\r\n  -sY/sZ: SCTP INIT/COOKIE-ECHO scans\r\n  -sO: IP protocol scan\r\n  -b <FTP relay host>: FTP bounce scan\r\nPORT SPECIFICATION AND SCAN ORDER:\r\n  -p <port ranges>: Only scan specified ports\r\n    Ex: -p22; -p1-65535; -p U:53,111,137,T:21-25,80,139,8080,S:9\r\n  --exclude-ports <port ranges>: Exclude the specified ports from scanning\r\n  -F: Fast mode - Scan fewer ports than the default scan\r\n  -r: Scan ports consecutively - don\'t randomize\r\n  --top-ports <number>: Scan <number> most common ports\r\n  --port-ratio <ratio>: Scan ports more common than <ratio>\r\nSERVICE/VERSION DETECTION:\r\n  -sV: Probe open ports to determine service/version info\r\n  --version-intensity <level>: Set from 0 (light) to 9 (try all probes)\r\n  --version-light: Limit to most likely probes (intensity 2)\r\n  --version-all: Try every single probe (intensity 9)\r\n  --version-trace: Show detailed version scan activity (for debugging)\r\nSCRIPT SCAN:\r\n  -sC: equivalent to --script=default\r\n  --script=<Lua scripts>: <Lua scripts> is a comma separated list of\r\n           directories, script-files or script-categories\r\n  --script-args=<n1=v1,[n2=v2,...]>: provide arguments to scripts\r\n  --script-args-file=filename: provide NSE script args in a file\r\n  --script-trace: Show all data sent and received\r\n  --script-updatedb: Update the script database.\r\n  --script-help=<Lua scripts>: Show help about scripts.\r\n           <Lua scripts> is a comma-separated list of script-files or\r\n           script-categories.\r\nOS DETECTION:\r\n  -O: Enable OS detection\r\n  --osscan-limit: Limit OS detection to promising targets\r\n  --osscan-guess: Guess OS more aggressively\r\nTIMING AND PERFORMANCE:\r\n  Options which take <time> are in seconds, or append \'ms\' (milliseconds),\r\n  \'s\' (seconds), \'m\' (minutes), or \'h\' (hours) to the value (e.g. 30m).\r\n  -T<0-5>: Set timing template (higher is faster)\r\n  --min-hostgroup/max-hostgroup <size>: Parallel host scan group sizes\r\n  --min-parallelism/max-parallelism <numprobes>: Probe parallelization\r\n  --min-rtt-timeout/max-rtt-timeout/initial-rtt-timeout <time>: Specifies\r\n      probe round trip time.\r\n  --max-retries <tries>: Caps number of port scan probe retransmissions.\r\n  --host-timeout <time>: Give up on target after this long\r\n  --scan-delay/--max-scan-delay <time>: Adjust delay between probes\r\n  --min-rate <number>: Send packets no slower than <number> per second\r\n  --max-rate <number>: Send packets no faster than <number> per second\r\nFIREWALL/IDS EVASION AND SPOOFING:\r\n  -f; --mtu <val>: fragment packets (optionally w/given MTU)\r\n  -D <decoy1,decoy2[,ME],...>: Cloak a scan with decoys\r\n  -S <IP_Address>: Spoof source address\r\n  -e <iface>: Use specified interface\r\n  -g/--source-port <portnum>: Use given port number\r\n  --proxies <url1,[url2],...>: Relay connections through HTTP/SOCKS4 proxies\r\n  --data <hex string>: Append a custom payload to sent packets\r\n  --data-string <string>: Append a custom ASCII string to sent packets\r\n  --data-length <num>: Append random data to sent packets\r\n  --ip-options <options>: Send packets with specified ip options\r\n  --ttl <val>: Set IP time-to-live field\r\n  --spoof-mac <mac address/prefix/vendor name>: Spoof your MAC address\r\n  --badsum: Send packets with a bogus TCP/UDP/SCTP checksum\r\nOUTPUT:\r\n  -oN/-oX/-oS/-oG <file>: Output scan in normal, XML, s|<rIpt kIddi3,\r\n     and Grepable format, respectively, to the given filename.\r\n  -oA <basename>: Output in the three major formats at once\r\n  -v: Increase verbosity level (use -vv or more for greater effect)\r\n  -d: Increase debugging level (use -dd or more for greater effect)\r\n  --reason: Display the reason a port is in a particular state\r\n  --open: Only show open (or possibly open) ports\r\n  --packet-trace: Show all packets sent and received\r\n  --iflist: Print host interfaces and routes (for debugging)\r\n  --append-output: Append to rather than clobber specified output files\r\n  --resume <filename>: Resume an aborted scan\r\n  --noninteractive: Disable runtime interactions via keyboard\r\n  --stylesheet <path/URL>: XSL stylesheet to transform XML output to HTML\r\n  --webxml: Reference stylesheet from Nmap.Org for more portable XML\r\n  --no-stylesheet: Prevent associating of XSL stylesheet w/XML output\r\nMISC:\r\n  -6: Enable IPv6 scanning\r\n  -A: Enable OS detection, version detection, script scanning, and traceroute\r\n  --datadir <dirname>: Specify custom Nmap data file location\r\n  --send-eth/--send-ip: Send using raw ethernet frames or IP packets\r\n  --privileged: Assume that the user is fully privileged\r\n  --unprivileged: Assume the user lacks raw socket privileges\r\n  -V: Print version number\r\n  -h: Print this help summary page.\r\nEXAMPLES:\r\n  nmap -v -A scanme.nmap.org\r\n  nmap -v -sn 192.168.0.0/16 10.0.0.0/8\r\n  nmap -v -iR 10000 -Pn -p 80\r\nSEE THE MAN PAGE (https://nmap.org/book/man.html) FOR MORE OPTIONS AND EXAMPLES'),
(2, 'Dig', 'Usage:  dig [@global-server] [domain] [q-type] [q-class] {q-opt}\r\n            {global-d-opt} host [@local-server] {local-d-opt}\r\n            [ host [@local-server] {local-d-opt} [...]]\r\nWhere:  domain    is in the Domain Name System\r\n        q-class  is one of (in,hs,ch,...) [default: in]\r\n        q-type   is one of (a,any,mx,ns,soa,hinfo,axfr,txt,...) [default:a]\r\n                 (Use ixfr=version for type ixfr)\r\n        q-opt    is one of:\r\n                 -4                  (use IPv4 query transport only)\r\n                 -6                  (use IPv6 query transport only)\r\n                 -b address[#port]   (bind to source address/port)\r\n                 -c class            (specify query class)\r\n                 -f filename         (batch mode)\r\n                 -k keyfile          (specify tsig key file)\r\n                 -m                  (enable memory usage debugging)\r\n                 -p port             (specify port number)\r\n                 -q name             (specify query name)\r\n                 -r                  (do not read ~/.digrc)\r\n                 -t type             (specify query type)\r\n                 -u                  (display times in usec instead of msec)\r\n                 -x dot-notation     (shortcut for reverse lookups)\r\n                 -y [hmac:]name:key  (specify named base64 tsig key)\r\n        d-opt    is of the form +keyword[=value], where keyword is:\r\n                 +[no]aaflag         (Set AA flag in query (+[no]aaflag))\r\n                 +[no]aaonly         (Set AA flag in query (+[no]aaflag))\r\n                 +[no]additional     (Control display of additional section)\r\n                 +[no]adflag         (Set AD flag in query (default on))\r\n                 +[no]all            (Set or clear all display flags)\r\n                 +[no]answer         (Control display of answer section)\r\n                 +[no]authority      (Control display of authority section)\r\n                 +[no]badcookie      (Retry BADCOOKIE responses)\r\n                 +[no]besteffort     (Try to parse even illegal messages)\r\n                 +bufsize[=###]      (Set EDNS0 Max UDP packet size)\r\n                 +[no]cdflag         (Set checking disabled flag in query)\r\n                 +[no]class          (Control display of class in records)\r\n                 +[no]cmd            (Control display of command line -\r\n                                      global option)\r\n                 +[no]comments       (Control display of packet header\r\n                                      and section name comments)\r\n                 +[no]cookie         (Add a COOKIE option to the request)\r\n                 +[no]crypto         (Control display of cryptographic\r\n                                      fields in records)\r\n                 +[no]defname        (Use search list (+[no]search))\r\n                 +[no]dns64prefix    (Get the DNS64 prefixes from ipv4only.arpa)\r\n                 +[no]dnssec         (Request DNSSEC records)\r\n                 +domain=###         (Set default domainname)\r\n                 +[no]dscp[=###]     (Set the DSCP value to ### [0..63])\r\n                 +[no]edns[=###]     (Set EDNS version) [0]\r\n                 +ednsflags=###      (Set EDNS flag bits)\r\n                 +[no]ednsnegotiation (Set EDNS version negotiation)\r\n                 +ednsopt=###[:value] (Send specified EDNS option)\r\n                 +noednsopt          (Clear list of +ednsopt options)\r\n                 +[no]expandaaaa     (Expand AAAA records)\r\n                 +[no]expire         (Request time to expire)\r\n                 +[no]fail           (Don\'t try next server on SERVFAIL)\r\n                 +[no]header-only    (Send query without a question section)\r\n                 +[no]https[=###]    (DNS-over-HTTPS mode) [/]\r\n                 +[no]https-get      (Use GET instead of default POST method\r\n                 +[no]identify       (ID responders in short answers)\r\n                 +[no]idnin          (Parse IDN names [default=on on tty])\r\n                 +[no]idnout         (Convert IDN response [default=on on tty])\r\n                 +[no]ignore         (Don\'t revert to TCP for TC responses.)\r\n                 +[no]keepalive      (Request EDNS TCP keepalive)\r\n                 +[no]keepopen       (Keep the TCP socket open between queries)\r\n                 +[no]multiline      (Print records in an expanded format)\r\n                 +ndots=###          (Set search NDOTS value)\r\n                 +[no]nsid           (Request Name Server ID)\r\n                 +[no]nssearch       (Search all authoritative nameservers)\r\n                 +[no]onesoa         (AXFR prints only one soa record)\r\n                 +[no]opcode=###     (Set the opcode of the request)\r\n                 +padding=###        (Set padding block size [0])\r\n                 +[no]qr             (Print question before sending)\r\n                 +[no]question       (Control display of question section)\r\n                 +[no]raflag         (Set RA flag in query (+[no]raflag))\r\n                 +[no]rdflag         (Recursive mode (+[no]recurse))\r\n                 +[no]recurse        (Recursive mode (+[no]rdflag))\r\n                 +retry=###          (Set number of UDP retries) [2]\r\n                 +[no]rrcomments     (Control display of per-record comments)\r\n                 +[no]search         (Set whether to use searchlist)\r\n                 +[no]short          (Display nothing except short\r\n                                      form of answers - global option)\r\n                 +[no]showbadcookie  (Show BADCOOKIE message)\r\n                 +[no]showsearch     (Search with intermediate results)\r\n                 +[no]split=##       (Split hex/base64 fields into chunks)\r\n                 +[no]stats          (Control display of statistics)\r\n                 +subnet=addr        (Set edns-client-subnet option)\r\n                 +[no]tcflag         (Set TC flag in query (+[no]tcflag))\r\n                 +[no]tcp            (TCP mode (+[no]vc))\r\n                 +timeout=###        (Set query timeout) [5]\r\n                 +[no]tls            (DNS-over-TLS mode)\r\n                 +[no]trace          (Trace delegation down from root [+dnssec])\r\n                 +tries=###          (Set number of UDP attempts) [3]\r\n                 +[no]ttlid          (Control display of ttls in records)\r\n                 +[no]ttlunits       (Display TTLs in human-readable units)\r\n                 +[no]unknownformat  (Print RDATA in RFC 3597 \"unknown\" format)\r\n                 +[no]vc             (TCP mode (+[no]tcp))\r\n                 +[no]yaml           (Present the results as YAML)\r\n                 +[no]zflag          (Set Z flag in query)\r\n        global d-opts and servers (before host name) affect all queries.\r\n        local d-opts and servers (after host name) affect only that lookup.\r\n        -h                           (print help and exit)\r\n        -v                           (print version and exit)\r\n'),
(4, 'Zap', ''),
(5, 'Wirechark', ''),
(8, 'Spiderfoot', 'usage: sf.py [-h] [-d] [-l IP:port] [-m mod1,mod2,...] [-M] [-C scanID] [-s TARGET] [-t type1,type2,...] [-u {all,footprint,investigate,passive}] [-T] [-o {tab,csv,json}] [-H] [-n] [-r] [-S LENGTH] [-D DELIMITER] [-f]\r\n             [-F type1,type2,...] [-x] [-q] [-V] [-max-threads MAX_THREADS]\r\n\r\nSpiderFoot 4.0.0: Open Source Intelligence Automation.\r\n\r\noptional arguments:\r\n  -h, --help            show this help message and exit\r\n  -d, --debug           Enable debug output.\r\n  -l IP:port            IP and port to listen on.\r\n  -m mod1,mod2,...      Modules to enable.\r\n  -M, --modules         List available modules.\r\n  -C scanID, --correlate scanID\r\n                        Run correlation rules against a scan ID.\r\n  -s TARGET             Target for the scan.\r\n  -t type1,type2,...    Event types to collect (modules selected automatically).\r\n  -u {all,footprint,investigate,passive}\r\n                        Select modules automatically by use case\r\n  -T, --types           List available event types.\r\n  -o {tab,csv,json}     Output format. Tab is default.\r\n  -H                    Don\'t print field headers, just data.\r\n  -n                    Strip newlines from data.\r\n  -r                    Include the source data field in tab/csv output.\r\n  -S LENGTH             Maximum data length to display. By default, all data is shown.\r\n  -D DELIMITER          Delimiter to use for CSV output. Default is ,.\r\n  -f                    Filter out other event types that weren\'t requested with -t.\r\n  -F type1,type2,...    Show only a set of event types, comma-separated.\r\n  -x                    STRICT MODE. Will only enable modules that can directly consume your target, and if -t was specified only those events will be consumed by modules. This overrides -t and -m options.\r\n  -q                    Disable logging. This will also hide errors!\r\n  -V, --version         Display the version of SpiderFoot and exit.\r\n  -max-threads MAX_THREADS\r\n                        Max number of modules to run concurrently.\r\n'),
(10, 'Metasploit', ''),
(11, 'Strings', 'Modo de empleo: strings [opcion(es)] [fichero(s)]\r\n Muestra las cadenas imprimibles en [fichero(s)] (por defecto entrada estándar)\r\n  Las opciones son:\r\n  -a - --all                Scan the entire file, not just the data section [default]\r\n  -d --data                 Only scan the data sections in the file\r\n  -f --print-file-name      Print the name of the file before each string\r\n  -n <number>               Locate & print any sequence of at least <number>\r\n    --bytes=<number>         displayable characters.  (The default is 4).\r\n  -t --radix={o,d,x}        Print the location of the string in base 8, 10 or 16\r\n  -w --include-all-whitespace Include all whitespace as valid string characters\r\n  -o                        An alias for --radix=o\r\n  -T --target=<BFDNAME>     Specify the binary file format\r\n  -e --encoding={s,S,b,l,B,L} Select character size and endianness:\r\n                            s = 7-bit, S = 8-bit, {b,l} = 16-bit, {B,L} = 32-bit\r\n  --unicode={default|show|invalid|hex|escape|highlight}\r\n  -U {d|s|i|x|e|h}          Specify how to treat UTF-8 encoded unicode characters\r\n  -s --output-separator=<string> String used to separate strings in output.\r\n  @<file>                   Read options from <file>\r\n  -h --help                 Display this information\r\n  -v -V --version           Print the program\'s version number\r\nstrings: objetivos admitidos: elf64-x86-64 elf32-i386 elf32-iamcu elf32-x86-64 pei-i386 pe-x86-64 pei-x86-64 elf64-l1om elf64-k1om elf64-little elf64-big elf32-little elf32-big pe-bigobj-x86-64 pe-i386 srec symbolsrec verilog tekhex binary ihex plugin\r\nReportar bichos a <https://sourceware.org/bugzilla/>\r\n'),
(12, 'Recon-ng', ''),
(13, 'Nikto', 'Option host requires an argument\r\n\r\n       -config+            Use this config file\r\n       -Display+           Turn on/off display outputs\r\n       -dbcheck            check database and other key files for syntax errors\r\n       -Format+            save file (-o) format\r\n       -Help               Extended help information\r\n       -host+              target host/URL\r\n       -id+                Host authentication to use, format is id:pass or id:pass:realm\r\n       -list-plugins       List all available plugins\r\n       -output+            Write output to this file\r\n       -nossl              Disables using SSL\r\n       -no404              Disables 404 checks\r\n       -Plugins+           List of plugins to run (default: ALL)\r\n       -port+              Port to use (default 80)\r\n       -root+              Prepend root value to all requests, format is /directory\r\n       -ssl                Force ssl mode on port\r\n       -Tuning+            Scan tuning\r\n       -timeout+           Timeout for requests (default 10 seconds)\r\n       -update             Update databases and plugins from CIRT.net\r\n       -Version            Print plugin and database versions\r\n       -vhost+             Virtual host (for Host header)\r\n                + requires a value\r\n\r\n        Note: This is the short help output. Use -H for full help text.\r\n'),
(14, 'John the ripper', 'John the Ripper 1.9.0-jumbo-1+bleeding-aec1328d6c 2021-11-02 10:45:52 +0100 OMP [linux-gnu 64-bit x86_64 AVX2 AC]\r\nCopyright (c) 1996-2021 by Solar Designer and others\r\nHomepage: https://www.openwall.com/john/\r\n\r\nUsage: john [OPTIONS] [PASSWORD-FILES]\r\n\r\n--help                     Print usage summary\r\n--single[=SECTION[,..]]    \"Single crack\" mode, using default or named rules\r\n--single=:rule[,..]        Same, using \"immediate\" rule(s)\r\n--single-seed=WORD[,WORD]  Add static seed word(s) for all salts in single mode\r\n--single-wordlist=FILE     *Short* wordlist with static seed words/morphemes\r\n--single-user-seed=FILE    Wordlist with seeds per username (user:password[s]\r\n                           format)\r\n--single-pair-max=N        Override max. number of word pairs generated (6)\r\n--no-single-pair           Disable single word pair generation\r\n--[no-]single-retest-guess Override config for SingleRetestGuess\r\n--wordlist[=FILE] --stdin  Wordlist mode, read words from FILE or stdin\r\n                  --pipe   like --stdin, but bulk reads, and allows rules\r\n--rules[=SECTION[,..]]     Enable word mangling rules (for wordlist or PRINCE\r\n                           modes), using default or named rules\r\n--rules=:rule[;..]]        Same, using \"immediate\" rule(s)\r\n--rules-stack=SECTION[,..] Stacked rules, applied after regular rules or to\r\n                           modes that otherwise don\'t support rules\r\n--rules-stack=:rule[;..]   Same, using \"immediate\" rule(s)\r\n--rules-skip-nop           Skip any NOP \":\" rules (you already ran w/o rules)\r\n--loopback[=FILE]          Like --wordlist, but extract words from a .pot file\r\n--mem-file-size=SIZE       Size threshold for wordlist preload (default 2048 MB)\r\n--dupe-suppression         Suppress all dupes in wordlist (and force preload)\r\n--incremental[=MODE]       \"Incremental\" mode [using section MODE]\r\n--incremental-charcount=N  Override CharCount for incremental mode\r\n--external=MODE            External mode or word filter\r\n--mask[=MASK]              Mask mode using MASK (or default from john.conf)\r\n--markov[=OPTIONS]         \"Markov\" mode (see doc/MARKOV)\r\n--mkv-stats=FILE           \"Markov\" stats file\r\n--prince[=FILE]            PRINCE mode, read words from FILE\r\n--prince-loopback[=FILE]   Fetch words from a .pot file\r\n--prince-elem-cnt-min=N    Minimum number of elements per chain (1)\r\n--prince-elem-cnt-max=[-]N Maximum number of elements per chain (negative N is\r\n                           relative to word length) (8)\r\n--prince-skip=N            Initial skip\r\n--prince-limit=N           Limit number of candidates generated\r\n--prince-wl-dist-len       Calculate length distribution from wordlist\r\n--prince-wl-max=N          Load only N words from input wordlist\r\n--prince-case-permute      Permute case of first letter\r\n--prince-mmap              Memory-map infile (not available with case permute)\r\n--prince-keyspace          Just show total keyspace that would be produced\r\n                           (disregarding skip and limit)\r\n--subsets[=CHARSET]        \"Subsets\" mode (see doc/SUBSETS)\r\n--subsets-required=N       The N first characters of \"subsets\" charset are\r\n                           the \"required set\"\r\n--subsets-min-diff=N       Minimum unique characters in subset\r\n--subsets-max-diff=[-]N    Maximum unique characters in subset (negative N is\r\n                           relative to word length)\r\n--subsets-prefer-short     Prefer shorter candidates over smaller subsets\r\n--subsets-prefer-small     Prefer smaller subsets over shorter candidates\r\n--make-charset=FILE        Make a charset, FILE will be overwritten\r\n--stdout[=LENGTH]          Just output candidate passwords [cut at LENGTH]\r\n--session=NAME             Give a new session the NAME\r\n--status[=NAME]            Print status of a session [called NAME]\r\n--restore[=NAME]           Restore an interrupted session [called NAME]\r\n--[no-]crack-status        Emit a status line whenever a password is cracked\r\n--progress-every=N         Emit a status line every N seconds\r\n--show[=left]              Show cracked passwords [if =left, then uncracked]\r\n--show=formats             Show information about hashes in a file (JSON)\r\n--show=invalid             Show lines that are not valid for selected format(s)\r\n--test[=TIME]              Run tests and benchmarks for TIME seconds each\r\n                           (if TIME is explicitly 0, test w/o benchmark)\r\n--stress-test[=TIME]       Loop self tests forever\r\n--test-full=LEVEL          Run more thorough self-tests\r\n--no-mask                  Used with --test for alternate benchmark w/o mask\r\n--skip-self-tests          Skip self tests\r\n--users=[-]LOGIN|UID[,..]  [Do not] load this (these) user(s) only\r\n--groups=[-]GID[,..]       Load users [not] of this (these) group(s) only\r\n--shells=[-]SHELL[,..]     Load users with[out] this (these) shell(s) only\r\n--salts=[-]COUNT[:MAX]     Load salts with[out] COUNT [to MAX] hashes, or\r\n--salts=#M[-N]             Load M [to N] most populated salts\r\n--costs=[-]C[:M][,...]     Load salts with[out] cost value Cn [to Mn]. For\r\n                           tunable cost parameters, see doc/OPTIONS\r\n--fork=N                   Fork N processes\r\n--node=MIN[-MAX]/TOTAL     This node\'s number range out of TOTAL count\r\n--save-memory=LEVEL        Enable memory saving, at LEVEL 1..3\r\n--log-stderr               Log to screen instead of file\r\n--verbosity=N              Change verbosity (1-5 or 6 for debug, default 3)\r\n--no-log                   Disables creation and writing to john.log file\r\n--bare-always-valid=Y      Treat bare hashes as valid (Y/N)\r\n--catch-up=NAME            Catch up with existing (paused) session NAME\r\n--config=FILE              Use FILE instead of john.conf or john.ini\r\n--encoding=NAME            Input encoding (eg. UTF-8, ISO-8859-1). See also\r\n                           doc/ENCODINGS.\r\n--input-encoding=NAME      Input encoding (alias for --encoding)\r\n--internal-codepage=NAME   Codepage used in rules/masks (see doc/ENCODINGS)\r\n--target-encoding=NAME     Output encoding (used by format)\r\n--force-tty                Set up terminal for reading keystrokes even if we\'re\r\n                           not the foreground process\r\n--field-separator-char=C   Use \'C\' instead of the \':\' in input and pot files\r\n--[no-]keep-guessing       Try finding plaintext collisions\r\n--list=WHAT                List capabilities, see --list=help or doc/OPTIONS\r\n--length=N                 Shortcut for --min-len=N --max-len=N\r\n--min-length=N             Request a minimum candidate length in bytes\r\n--max-length=N             Request a maximum candidate length in bytes\r\n--max-candidates=[-]N      Gracefully exit after this many candidates tried.\r\n                           (if negative, reset count on each crack)\r\n--max-run-time=[-]N        Gracefully exit after this many seconds (if negative,\r\n                           reset timer on each crack)\r\n--mkpc=N                   Request a lower max. keys per crypt\r\n--no-loader-dupecheck      Disable the dupe checking when loading hashes\r\n--pot=NAME                 Pot file to use\r\n--regen-lost-salts=N       Brute force unknown salts (see doc/OPTIONS)\r\n--reject-printable         Reject printable binaries\r\n--tune=HOW                 Tuning options (auto/report/N)\r\n--subformat=FORMAT         Pick a benchmark format for --format=crypt\r\n--format=[NAME|CLASS][,..] Force hash of type NAME. The supported formats can\r\n                           be seen with --list=formats and --list=subformats.\r\n                           See also doc/OPTIONS for more advanced selection of\r\n                           format(s), including using classes and wildcards.\r\n');
INSERT INTO `herramientas` (`id_herramienta`, `nombre_herramienta`, `ayuda_herramienta`) VALUES
(15, 'Hashcat', 'hashcat (v6.2.5) starting in help mode\r\n\r\nUsage: hashcat [options]... hash|hashfile|hccapxfile [dictionary|mask|directory]...\r\n\r\n- [ Options ] -\r\n\r\n Options Short / Long           | Type | Description                                          | Example\r\n================================+======+======================================================+=======================\r\n -m, --hash-type                | Num  | Hash-type, references below (otherwise autodetect)   | -m 1000\r\n -a, --attack-mode              | Num  | Attack-mode, see references below                    | -a 3\r\n -V, --version                  |      | Print version                                        |\r\n -h, --help                     |      | Print help                                           |\r\n     --quiet                    |      | Suppress output                                      |\r\n     --hex-charset              |      | Assume charset is given in hex                       |\r\n     --hex-salt                 |      | Assume salt is given in hex                          |\r\n     --hex-wordlist             |      | Assume words in wordlist are given in hex            |\r\n     --force                    |      | Ignore warnings                                      |\r\n     --deprecated-check-disable |      | Enable deprecated plugins                            |\r\n     --status                   |      | Enable automatic update of the status screen         |\r\n     --status-json              |      | Enable JSON format for status output                 |\r\n     --status-timer             | Num  | Sets seconds between status screen updates to X      | --status-timer=1\r\n     --stdin-timeout-abort      | Num  | Abort if there is no input from stdin for X seconds  | --stdin-timeout-abort=300\r\n     --machine-readable         |      | Display the status view in a machine-readable format |\r\n     --keep-guessing            |      | Keep guessing the hash after it has been cracked     |\r\n     --self-test-disable        |      | Disable self-test functionality on startup           |\r\n     --loopback                 |      | Add new plains to induct directory                   |\r\n     --markov-hcstat2           | File | Specify hcstat2 file to use                          | --markov-hcstat2=my.hcstat2\r\n     --markov-disable           |      | Disables markov-chains, emulates classic brute-force |\r\n     --markov-classic           |      | Enables classic markov-chains, no per-position       |\r\n -t, --markov-threshold         | Num  | Threshold X when to stop accepting new markov-chains | -t 50\r\n     --runtime                  | Num  | Abort session after X seconds of runtime             | --runtime=10\r\n     --session                  | Str  | Define specific session name                         | --session=mysession\r\n     --restore                  |      | Restore session from --session                       |\r\n     --restore-disable          |      | Do not write restore file                            |\r\n     --restore-file-path        | File | Specific path to restore file                        | --restore-file-path=x.restore\r\n -o, --outfile                  | File | Define outfile for recovered hash                    | -o outfile.txt\r\n     --outfile-format           | Str  | Outfile format to use, separated with commas         | --outfile-format=1,3\r\n     --outfile-autohex-disable  |      | Disable the use of $HEX[] in output plains           |\r\n     --outfile-check-timer      | Num  | Sets seconds between outfile checks to X             | --outfile-check=30\r\n     --wordlist-autohex-disable |      | Disable the conversion of $HEX[] from the wordlist   |\r\n -p, --separator                | Char | Separator char for hashlists and outfile             | -p :\r\n     --stdout                   |      | Do not crack a hash, instead print candidates only   |\r\n     --show                     |      | Compare hashlist with potfile; show cracked hashes   |\r\n     --left                     |      | Compare hashlist with potfile; show uncracked hashes |\r\n     --username                 |      | Enable ignoring of usernames in hashfile             |\r\n     --remove                   |      | Enable removal of hashes once they are cracked       |\r\n     --remove-timer             | Num  | Update input hash file each X seconds                | --remove-timer=30\r\n     --potfile-disable          |      | Do not write potfile                                 |\r\n     --potfile-path             | File | Specific path to potfile                             | --potfile-path=my.pot\r\n     --encoding-from            | Code | Force internal wordlist encoding from X              | --encoding-from=iso-8859-15\r\n     --encoding-to              | Code | Force internal wordlist encoding to X                | --encoding-to=utf-32le\r\n     --debug-mode               | Num  | Defines the debug mode (hybrid only by using rules)  | --debug-mode=4\r\n     --debug-file               | File | Output file for debugging rules                      | --debug-file=good.log\r\n     --induction-dir            | Dir  | Specify the induction directory to use for loopback  | --induction=inducts\r\n     --outfile-check-dir        | Dir  | Specify the outfile directory to monitor for plains  | --outfile-check-dir=x\r\n     --logfile-disable          |      | Disable the logfile                                  |\r\n     --hccapx-message-pair      | Num  | Load only message pairs from hccapx matching X       | --hccapx-message-pair=2\r\n     --nonce-error-corrections  | Num  | The BF size range to replace AP\'s nonce last bytes   | --nonce-error-corrections=16\r\n     --keyboard-layout-mapping  | File | Keyboard layout mapping table for special hash-modes | --keyb=german.hckmap\r\n     --truecrypt-keyfiles       | File | Keyfiles to use, separated with commas               | --truecrypt-keyf=x.png\r\n     --veracrypt-keyfiles       | File | Keyfiles to use, separated with commas               | --veracrypt-keyf=x.txt\r\n     --veracrypt-pim-start      | Num  | VeraCrypt personal iterations multiplier start       | --veracrypt-pim-start=450\r\n     --veracrypt-pim-stop       | Num  | VeraCrypt personal iterations multiplier stop        | --veracrypt-pim-stop=500\r\n -b, --benchmark                |      | Run benchmark of selected hash-modes                 |\r\n     --benchmark-all            |      | Run benchmark of all hash-modes (requires -b)        |\r\n     --speed-only               |      | Return expected speed of the attack, then quit       |\r\n     --progress-only            |      | Return ideal progress step size and time to process  |\r\n -c, --segment-size             | Num  | Sets size in MB to cache from the wordfile to X      | -c 32\r\n     --bitmap-min               | Num  | Sets minimum bits allowed for bitmaps to X           | --bitmap-min=24\r\n     --bitmap-max               | Num  | Sets maximum bits allowed for bitmaps to X           | --bitmap-max=24\r\n     --cpu-affinity             | Str  | Locks to CPU devices, separated with commas          | --cpu-affinity=1,2,3\r\n     --hook-threads             | Num  | Sets number of threads for a hook (per compute unit) | --hook-threads=8\r\n     --hash-info                |      | Show information for each hash-mode                  |\r\n     --example-hashes           |      | Alias of --hash-info                                 |\r\n     --backend-ignore-cuda      |      | Do not try to open CUDA interface on startup         |\r\n     --backend-ignore-opencl    |      | Do not try to open OpenCL interface on startup       |\r\n -I, --backend-info             |      | Show info about detected backend API devices         | -I\r\n -d, --backend-devices          | Str  | Backend devices to use, separated with commas        | -d 1\r\n -D, --opencl-device-types      | Str  | OpenCL device-types to use, separated with commas    | -D 1\r\n -O, --optimized-kernel-enable  |      | Enable optimized kernels (limits password length)    |\r\n -M, --multiply-accel-disable   |      | Disable multiply kernel-accel with processor count   |\r\n -w, --workload-profile         | Num  | Enable a specific workload profile, see pool below   | -w 3\r\n -n, --kernel-accel             | Num  | Manual workload tuning, set outerloop step size to X | -n 64\r\n -u, --kernel-loops             | Num  | Manual workload tuning, set innerloop step size to X | -u 256\r\n -T, --kernel-threads           | Num  | Manual workload tuning, set thread count to X        | -T 64\r\n     --backend-vector-width     | Num  | Manually override backend vector-width to X          | --backend-vector=4\r\n     --spin-damp                | Num  | Use CPU for device synchronization, in percent       | --spin-damp=10\r\n     --hwmon-disable            |      | Disable temperature and fanspeed reads and triggers  |\r\n     --hwmon-temp-abort         | Num  | Abort if temperature reaches X degrees Celsius       | --hwmon-temp-abort=100\r\n     --scrypt-tmto              | Num  | Manually override TMTO value for scrypt to X         | --scrypt-tmto=3\r\n -s, --skip                     | Num  | Skip X words from the start                          | -s 1000000\r\n -l, --limit                    | Num  | Limit X words from the start + skipped words         | -l 1000000\r\n     --keyspace                 |      | Show keyspace base:mod values and quit               |\r\n -j, --rule-left                | Rule | Single rule applied to each word from left wordlist  | -j \'c\'\r\n -k, --rule-right               | Rule | Single rule applied to each word from right wordlist | -k \'^-\'\r\n -r, --rules-file               | File | Multiple rules applied to each word from wordlists   | -r rules/best64.rule\r\n -g, --generate-rules           | Num  | Generate X random rules                              | -g 10000\r\n     --generate-rules-func-min  | Num  | Force min X functions per rule                       |\r\n     --generate-rules-func-max  | Num  | Force max X functions per rule                       |\r\n     --generate-rules-func-sel  | Str  | Pool of rule operators valid for random rule engine  | --generate-rules-func-sel=ioTlc\r\n     --generate-rules-seed      | Num  | Force RNG seed set to X                              |\r\n -1, --custom-charset1          | CS   | User-defined charset ?1                              | -1 ?l?d?u\r\n -2, --custom-charset2          | CS   | User-defined charset ?2                              | -2 ?l?d?s\r\n -3, --custom-charset3          | CS   | User-defined charset ?3                              |\r\n -4, --custom-charset4          | CS   | User-defined charset ?4                              |\r\n     --identify                 |      | Shows all supported algorithms for input hashes      | --identify my.hash\r\n -i, --increment                |      | Enable mask increment mode                           |\r\n     --increment-min            | Num  | Start mask incrementing at X                         | --increment-min=4\r\n     --increment-max            | Num  | Stop mask incrementing at X                          | --increment-max=8\r\n -S, --slow-candidates          |      | Enable slower (but advanced) candidate generators    |\r\n     --brain-server             |      | Enable brain server                                  |\r\n     --brain-server-timer       | Num  | Update the brain server dump each X seconds (min:60) | --brain-server-timer=300\r\n -z, --brain-client             |      | Enable brain client, activates -S                    |\r\n     --brain-client-features    | Num  | Define brain client features, see below              | --brain-client-features=3\r\n     --brain-host               | Str  | Brain server host (IP or domain)                     | --brain-host=127.0.0.1\r\n     --brain-port               | Port | Brain server port                                    | --brain-port=13743\r\n     --brain-password           | Str  | Brain server authentication password                 | --brain-password=bZfhCvGUSjRq\r\n     --brain-session            | Hex  | Overrides automatically calculated brain session     | --brain-session=0x2ae611db\r\n     --brain-session-whitelist  | Hex  | Allow given sessions only, separated with commas     | --brain-session-whitelist=0x2ae611db\r\n\r\n- [ Hash modes ] -\r\n\r\n      # | Name                                                | Category\r\n  ======+=====================================================+======================================\r\n    900 | MD4                                                 | Raw Hash\r\n      0 | MD5                                                 | Raw Hash\r\n    100 | SHA1                                                | Raw Hash\r\n   1300 | SHA2-224                                            | Raw Hash\r\n   1400 | SHA2-256                                            | Raw Hash\r\n  10800 | SHA2-384                                            | Raw Hash\r\n   1700 | SHA2-512                                            | Raw Hash\r\n  17300 | SHA3-224                                            | Raw Hash\r\n  17400 | SHA3-256                                            | Raw Hash\r\n  17500 | SHA3-384                                            | Raw Hash\r\n  17600 | SHA3-512                                            | Raw Hash\r\n   6000 | RIPEMD-160                                          | Raw Hash\r\n    600 | BLAKE2b-512                                         | Raw Hash\r\n  11700 | GOST R 34.11-2012 (Streebog) 256-bit, big-endian    | Raw Hash\r\n  11800 | GOST R 34.11-2012 (Streebog) 512-bit, big-endian    | Raw Hash\r\n   6900 | GOST R 34.11-94                                     | Raw Hash\r\n  17010 | GPG (AES-128/AES-256 (SHA-1($pass)))                | Raw Hash\r\n   5100 | Half MD5                                            | Raw Hash\r\n  17700 | Keccak-224                                          | Raw Hash\r\n  17800 | Keccak-256                                          | Raw Hash\r\n  17900 | Keccak-384                                          | Raw Hash\r\n  18000 | Keccak-512                                          | Raw Hash\r\n   6100 | Whirlpool                                           | Raw Hash\r\n  10100 | SipHash                                             | Raw Hash\r\n     70 | md5(utf16le($pass))                                 | Raw Hash\r\n    170 | sha1(utf16le($pass))                                | Raw Hash\r\n   1470 | sha256(utf16le($pass))                              | Raw Hash\r\n  10870 | sha384(utf16le($pass))                              | Raw Hash\r\n   1770 | sha512(utf16le($pass))                              | Raw Hash\r\n     10 | md5($pass.$salt)                                    | Raw Hash salted and/or iterated\r\n     20 | md5($salt.$pass)                                    | Raw Hash salted and/or iterated\r\n   3800 | md5($salt.$pass.$salt)                              | Raw Hash salted and/or iterated\r\n   3710 | md5($salt.md5($pass))                               | Raw Hash salted and/or iterated\r\n   4110 | md5($salt.md5($pass.$salt))                         | Raw Hash salted and/or iterated\r\n   4010 | md5($salt.md5($salt.$pass))                         | Raw Hash salted and/or iterated\r\n  21300 | md5($salt.sha1($salt.$pass))                        | Raw Hash salted and/or iterated\r\n     40 | md5($salt.utf16le($pass))                           | Raw Hash salted and/or iterated\r\n   2600 | md5(md5($pass))                                     | Raw Hash salted and/or iterated\r\n   3910 | md5(md5($pass).md5($salt))                          | Raw Hash salted and/or iterated\r\n   3500 | md5(md5(md5($pass)))                                | Raw Hash salted and/or iterated\r\n   4400 | md5(sha1($pass))                                    | Raw Hash salted and/or iterated\r\n  20900 | md5(sha1($pass).md5($pass).sha1($pass))             | Raw Hash salted and/or iterated\r\n  21200 | md5(sha1($salt).md5($pass))                         | Raw Hash salted and/or iterated\r\n   4300 | md5(strtoupper(md5($pass)))                         | Raw Hash salted and/or iterated\r\n     30 | md5(utf16le($pass).$salt)                           | Raw Hash salted and/or iterated\r\n    110 | sha1($pass.$salt)                                   | Raw Hash salted and/or iterated\r\n    120 | sha1($salt.$pass)                                   | Raw Hash salted and/or iterated\r\n   4900 | sha1($salt.$pass.$salt)                             | Raw Hash salted and/or iterated\r\n   4520 | sha1($salt.sha1($pass))                             | Raw Hash salted and/or iterated\r\n  24300 | sha1($salt.sha1($pass.$salt))                       | Raw Hash salted and/or iterated\r\n    140 | sha1($salt.utf16le($pass))                          | Raw Hash salted and/or iterated\r\n  19300 | sha1($salt1.$pass.$salt2)                           | Raw Hash salted and/or iterated\r\n  14400 | sha1(CX)                                            | Raw Hash salted and/or iterated\r\n   4700 | sha1(md5($pass))                                    | Raw Hash salted and/or iterated\r\n   4710 | sha1(md5($pass).$salt)                              | Raw Hash salted and/or iterated\r\n  21100 | sha1(md5($pass.$salt))                              | Raw Hash salted and/or iterated\r\n  18500 | sha1(md5(md5($pass)))                               | Raw Hash salted and/or iterated\r\n   4500 | sha1(sha1($pass))                                   | Raw Hash salted and/or iterated\r\n   4510 | sha1(sha1($pass).$salt)                             | Raw Hash salted and/or iterated\r\n   5000 | sha1(sha1($salt.$pass.$salt))                       | Raw Hash salted and/or iterated\r\n    130 | sha1(utf16le($pass).$salt)                          | Raw Hash salted and/or iterated\r\n   1410 | sha256($pass.$salt)                                 | Raw Hash salted and/or iterated\r\n   1420 | sha256($salt.$pass)                                 | Raw Hash salted and/or iterated\r\n  22300 | sha256($salt.$pass.$salt)                           | Raw Hash salted and/or iterated\r\n  20720 | sha256($salt.sha256($pass))                         | Raw Hash salted and/or iterated\r\n   1440 | sha256($salt.utf16le($pass))                        | Raw Hash salted and/or iterated\r\n  20800 | sha256(md5($pass))                                  | Raw Hash salted and/or iterated\r\n  20710 | sha256(sha256($pass).$salt)                         | Raw Hash salted and/or iterated\r\n  21400 | sha256(sha256_bin($pass))                           | Raw Hash salted and/or iterated\r\n   1430 | sha256(utf16le($pass).$salt)                        | Raw Hash salted and/or iterated\r\n  10810 | sha384($pass.$salt)                                 | Raw Hash salted and/or iterated\r\n  10820 | sha384($salt.$pass)                                 | Raw Hash salted and/or iterated\r\n  10840 | sha384($salt.utf16le($pass))                        | Raw Hash salted and/or iterated\r\n  10830 | sha384(utf16le($pass).$salt)                        | Raw Hash salted and/or iterated\r\n   1710 | sha512($pass.$salt)                                 | Raw Hash salted and/or iterated\r\n   1720 | sha512($salt.$pass)                                 | Raw Hash salted and/or iterated\r\n   1740 | sha512($salt.utf16le($pass))                        | Raw Hash salted and/or iterated\r\n   1730 | sha512(utf16le($pass).$salt)                        | Raw Hash salted and/or iterated\r\n     50 | HMAC-MD5 (key = $pass)                              | Raw Hash authenticated\r\n     60 | HMAC-MD5 (key = $salt)                              | Raw Hash authenticated\r\n    150 | HMAC-SHA1 (key = $pass)                             | Raw Hash authenticated\r\n    160 | HMAC-SHA1 (key = $salt)                             | Raw Hash authenticated\r\n   1450 | HMAC-SHA256 (key = $pass)                           | Raw Hash authenticated\r\n   1460 | HMAC-SHA256 (key = $salt)                           | Raw Hash authenticated\r\n   1750 | HMAC-SHA512 (key = $pass)                           | Raw Hash authenticated\r\n   1760 | HMAC-SHA512 (key = $salt)                           | Raw Hash authenticated\r\n  11750 | HMAC-Streebog-256 (key = $pass), big-endian         | Raw Hash authenticated\r\n  11760 | HMAC-Streebog-256 (key = $salt), big-endian         | Raw Hash authenticated\r\n  11850 | HMAC-Streebog-512 (key = $pass), big-endian         | Raw Hash authenticated\r\n  11860 | HMAC-Streebog-512 (key = $salt), big-endian         | Raw Hash authenticated\r\n  11500 | CRC32                                               | Raw Checksum\r\n  27900 | CRC32C                                              | Raw Checksum\r\n  28000 | CRC64Jones                                          | Raw Checksum\r\n  18700 | Java Object hashCode()                              | Raw Checksum\r\n  25700 | MurmurHash                                          | Raw Checksum\r\n  27800 | MurmurHash3                                         | Raw Checksum\r\n  14100 | 3DES (PT = $salt, key = $pass)                      | Raw Cipher, Known-plaintext attack\r\n  14000 | DES (PT = $salt, key = $pass)                       | Raw Cipher, Known-plaintext attack\r\n  26401 | AES-128-ECB NOKDF (PT = $salt, key = $pass)         | Raw Cipher, Known-plaintext attack\r\n  26402 | AES-192-ECB NOKDF (PT = $salt, key = $pass)         | Raw Cipher, Known-plaintext attack\r\n  26403 | AES-256-ECB NOKDF (PT = $salt, key = $pass)         | Raw Cipher, Known-plaintext attack\r\n  15400 | ChaCha20                                            | Raw Cipher, Known-plaintext attack\r\n  14500 | Linux Kernel Crypto API (2.4)                       | Raw Cipher, Known-plaintext attack\r\n  14900 | Skip32 (PT = $salt, key = $pass)                    | Raw Cipher, Known-plaintext attack\r\n  11900 | PBKDF2-HMAC-MD5                                     | Generic KDF\r\n  12000 | PBKDF2-HMAC-SHA1                                    | Generic KDF\r\n  10900 | PBKDF2-HMAC-SHA256                                  | Generic KDF\r\n  12100 | PBKDF2-HMAC-SHA512                                  | Generic KDF\r\n   8900 | scrypt                                              | Generic KDF\r\n    400 | phpass                                              | Generic KDF\r\n  16100 | TACACS+                                             | Network Protocol\r\n  11400 | SIP digest authentication (MD5)                     | Network Protocol\r\n   5300 | IKE-PSK MD5                                         | Network Protocol\r\n   5400 | IKE-PSK SHA1                                        | Network Protocol\r\n  25100 | SNMPv3 HMAC-MD5-96                                  | Network Protocol\r\n  25000 | SNMPv3 HMAC-MD5-96/HMAC-SHA1-96                     | Network Protocol\r\n  25200 | SNMPv3 HMAC-SHA1-96                                 | Network Protocol\r\n  26700 | SNMPv3 HMAC-SHA224-128                              | Network Protocol\r\n  26800 | SNMPv3 HMAC-SHA256-192                              | Network Protocol\r\n  26900 | SNMPv3 HMAC-SHA384-256                              | Network Protocol\r\n  27300 | SNMPv3 HMAC-SHA512-384                              | Network Protocol\r\n   2500 | WPA-EAPOL-PBKDF2                                    | Network Protocol\r\n   2501 | WPA-EAPOL-PMK                                       | Network Protocol\r\n  22000 | WPA-PBKDF2-PMKID+EAPOL                              | Network Protocol\r\n  22001 | WPA-PMK-PMKID+EAPOL                                 | Network Protocol\r\n  16800 | WPA-PMKID-PBKDF2                                    | Network Protocol\r\n  16801 | WPA-PMKID-PMK                                       | Network Protocol\r\n   7300 | IPMI2 RAKP HMAC-SHA1                                | Network Protocol\r\n  10200 | CRAM-MD5                                            | Network Protocol\r\n  16500 | JWT (JSON Web Token)                                | Network Protocol\r\n  19600 | Kerberos 5, etype 17, TGS-REP                       | Network Protocol\r\n  19800 | Kerberos 5, etype 17, Pre-Auth                      | Network Protocol\r\n  19700 | Kerberos 5, etype 18, TGS-REP                       | Network Protocol\r\n  19900 | Kerberos 5, etype 18, Pre-Auth                      | Network Protocol\r\n   7500 | Kerberos 5, etype 23, AS-REQ Pre-Auth               | Network Protocol\r\n  13100 | Kerberos 5, etype 23, TGS-REP                       | Network Protocol\r\n  18200 | Kerberos 5, etype 23, AS-REP                        | Network Protocol\r\n   5500 | NetNTLMv1 / NetNTLMv1+ESS                           | Network Protocol\r\n  27000 | NetNTLMv1 / NetNTLMv1+ESS (NT)                      | Network Protocol\r\n   5600 | NetNTLMv2                                           | Network Protocol\r\n  27100 | NetNTLMv2 (NT)                                      | Network Protocol\r\n   4800 | iSCSI CHAP authentication, MD5(CHAP)                | Network Protocol\r\n   8500 | RACF                                                | Operating System\r\n   6300 | AIX {smd5}                                          | Operating System\r\n   6700 | AIX {ssha1}                                         | Operating System\r\n   6400 | AIX {ssha256}                                       | Operating System\r\n   6500 | AIX {ssha512}                                       | Operating System\r\n   3000 | LM                                                  | Operating System\r\n  19000 | QNX /etc/shadow (MD5)                               | Operating System\r\n  19100 | QNX /etc/shadow (SHA256)                            | Operating System\r\n  19200 | QNX /etc/shadow (SHA512)                            | Operating System\r\n  15300 | DPAPI masterkey file v1                             | Operating System\r\n  15900 | DPAPI masterkey file v2                             | Operating System\r\n   7200 | GRUB 2                                              | Operating System\r\n  12800 | MS-AzureSync PBKDF2-HMAC-SHA256                     | Operating System\r\n  12400 | BSDi Crypt, Extended DES                            | Operating System\r\n   1000 | NTLM                                                | Operating System\r\n   9900 | Radmin2                                             | Operating System\r\n   5800 | Samsung Android Password/PIN                        | Operating System\r\n  28100 | Windows Hello PIN/Password                          | Operating System\r\n  13800 | Windows Phone 8+ PIN/password                       | Operating System\r\n   2410 | Cisco-ASA MD5                                       | Operating System\r\n   9200 | Cisco-IOS $8$ (PBKDF2-SHA256)                       | Operating System\r\n   9300 | Cisco-IOS $9$ (scrypt)                              | Operating System\r\n   5700 | Cisco-IOS type 4 (SHA256)                           | Operating System\r\n   2400 | Cisco-PIX MD5                                       | Operating System\r\n   8100 | Citrix NetScaler (SHA1)                             | Operating System\r\n  22200 | Citrix NetScaler (SHA512)                           | Operating System\r\n   1100 | Domain Cached Credentials (DCC), MS Cache           | Operating System\r\n   2100 | Domain Cached Credentials 2 (DCC2), MS Cache 2      | Operating System\r\n   7000 | FortiGate (FortiOS)                                 | Operating System\r\n  26300 | FortiGate256 (FortiOS256)                           | Operating System\r\n    125 | ArubaOS                                             | Operating System\r\n    501 | Juniper IVE                                         | Operating System\r\n     22 | Juniper NetScreen/SSG (ScreenOS)                    | Operating System\r\n  15100 | Juniper/NetBSD sha1crypt                            | Operating System\r\n  26500 | iPhone passcode (UID key + System Keybag)           | Operating System\r\n    122 | macOS v10.4, macOS v10.5, macOS v10.6               | Operating System\r\n   1722 | macOS v10.7                                         | Operating System\r\n   7100 | macOS v10.8+ (PBKDF2-SHA512)                        | Operating System\r\n   3200 | bcrypt $2*$, Blowfish (Unix)                        | Operating System\r\n    500 | md5crypt, MD5 (Unix), Cisco-IOS $1$ (MD5)           | Operating System\r\n   1500 | descrypt, DES (Unix), Traditional DES               | Operating System\r\n   7400 | sha256crypt $5$, SHA256 (Unix)                      | Operating System\r\n   1800 | sha512crypt $6$, SHA512 (Unix)                      | Operating System\r\n  24600 | SQLCipher                                           | Database Server\r\n    131 | MSSQL (2000)                                        | Database Server\r\n    132 | MSSQL (2005)                                        | Database Server\r\n   1731 | MSSQL (2012, 2014)                                  | Database Server\r\n  24100 | MongoDB ServerKey SCRAM-SHA-1                       | Database Server\r\n  24200 | MongoDB ServerKey SCRAM-SHA-256                     | Database Server\r\n     12 | PostgreSQL                                          | Database Server\r\n  11100 | PostgreSQL CRAM (MD5)                               | Database Server\r\n   3100 | Oracle H: Type (Oracle 7+)                          | Database Server\r\n    112 | Oracle S: Type (Oracle 11+)                         | Database Server\r\n  12300 | Oracle T: Type (Oracle 12+)                         | Database Server\r\n   7401 | MySQL $A$ (sha256crypt)                             | Database Server\r\n  11200 | MySQL CRAM (SHA1)                                   | Database Server\r\n    200 | MySQL323                                            | Database Server\r\n    300 | MySQL4.1/MySQL5                                     | Database Server\r\n   8000 | Sybase ASE                                          | Database Server\r\n   8300 | DNSSEC (NSEC3)                                      | FTP, HTTP, SMTP, LDAP Server\r\n  25900 | KNX IP Secure - Device Authentication Code          | FTP, HTTP, SMTP, LDAP Server\r\n  16400 | CRAM-MD5 Dovecot                                    | FTP, HTTP, SMTP, LDAP Server\r\n   1411 | SSHA-256(Base64), LDAP {SSHA256}                    | FTP, HTTP, SMTP, LDAP Server\r\n   1711 | SSHA-512(Base64), LDAP {SSHA512}                    | FTP, HTTP, SMTP, LDAP Server\r\n  24900 | Dahua Authentication MD5                            | FTP, HTTP, SMTP, LDAP Server\r\n  10901 | RedHat 389-DS LDAP (PBKDF2-HMAC-SHA256)             | FTP, HTTP, SMTP, LDAP Server\r\n  15000 | FileZilla Server >= 0.9.55                          | FTP, HTTP, SMTP, LDAP Server\r\n  12600 | ColdFusion 10+                                      | FTP, HTTP, SMTP, LDAP Server\r\n   1600 | Apache $apr1$ MD5, md5apr1, MD5 (APR)               | FTP, HTTP, SMTP, LDAP Server\r\n    141 | Episerver 6.x < .NET 4                              | FTP, HTTP, SMTP, LDAP Server\r\n   1441 | Episerver 6.x >= .NET 4                             | FTP, HTTP, SMTP, LDAP Server\r\n   1421 | hMailServer                                         | FTP, HTTP, SMTP, LDAP Server\r\n    101 | nsldap, SHA-1(Base64), Netscape LDAP SHA            | FTP, HTTP, SMTP, LDAP Server\r\n    111 | nsldaps, SSHA-1(Base64), Netscape LDAP SSHA         | FTP, HTTP, SMTP, LDAP Server\r\n   7700 | SAP CODVN B (BCODE)                                 | Enterprise Application Software (EAS)\r\n   7701 | SAP CODVN B (BCODE) from RFC_READ_TABLE             | Enterprise Application Software (EAS)\r\n   7800 | SAP CODVN F/G (PASSCODE)                            | Enterprise Application Software (EAS)\r\n   7801 | SAP CODVN F/G (PASSCODE) from RFC_READ_TABLE        | Enterprise Application Software (EAS)\r\n  10300 | SAP CODVN H (PWDSALTEDHASH) iSSHA-1                 | Enterprise Application Software (EAS)\r\n    133 | PeopleSoft                                          | Enterprise Application Software (EAS)\r\n  13500 | PeopleSoft PS_TOKEN                                 | Enterprise Application Software (EAS)\r\n  21500 | SolarWinds Orion                                    | Enterprise Application Software (EAS)\r\n  21501 | SolarWinds Orion v2                                 | Enterprise Application Software (EAS)\r\n     24 | SolarWinds Serv-U                                   | Enterprise Application Software (EAS)\r\n   8600 | Lotus Notes/Domino 5                                | Enterprise Application Software (EAS)\r\n   8700 | Lotus Notes/Domino 6                                | Enterprise Application Software (EAS)\r\n   9100 | Lotus Notes/Domino 8                                | Enterprise Application Software (EAS)\r\n  26200 | OpenEdge Progress Encode                            | Enterprise Application Software (EAS)\r\n  20600 | Oracle Transportation Management (SHA256)           | Enterprise Application Software (EAS)\r\n   4711 | Huawei sha1(md5($pass).$salt)                       | Enterprise Application Software (EAS)\r\n  20711 | AuthMe sha256                                       | Enterprise Application Software (EAS)\r\n  22400 | AES Crypt (SHA256)                                  | Full-Disk Encryption (FDE)\r\n  27400 | VMware VMX (PBKDF2-HMAC-SHA1 + AES-256-CBC)         | Full-Disk Encryption (FDE)\r\n  14600 | LUKS                                                | Full-Disk Encryption (FDE)\r\n  13711 | VeraCrypt RIPEMD160 + XTS 512 bit                   | Full-Disk Encryption (FDE)\r\n  13712 | VeraCrypt RIPEMD160 + XTS 1024 bit                  | Full-Disk Encryption (FDE)\r\n  13713 | VeraCrypt RIPEMD160 + XTS 1536 bit                  | Full-Disk Encryption (FDE)\r\n  13741 | VeraCrypt RIPEMD160 + XTS 512 bit + boot-mode       | Full-Disk Encryption (FDE)\r\n  13742 | VeraCrypt RIPEMD160 + XTS 1024 bit + boot-mode      | Full-Disk Encryption (FDE)\r\n  13743 | VeraCrypt RIPEMD160 + XTS 1536 bit + boot-mode      | Full-Disk Encryption (FDE)\r\n  13751 | VeraCrypt SHA256 + XTS 512 bit                      | Full-Disk Encryption (FDE)\r\n  13752 | VeraCrypt SHA256 + XTS 1024 bit                     | Full-Disk Encryption (FDE)\r\n  13753 | VeraCrypt SHA256 + XTS 1536 bit                     | Full-Disk Encryption (FDE)\r\n  13761 | VeraCrypt SHA256 + XTS 512 bit + boot-mode          | Full-Disk Encryption (FDE)\r\n  13762 | VeraCrypt SHA256 + XTS 1024 bit + boot-mode         | Full-Disk Encryption (FDE)\r\n  13763 | VeraCrypt SHA256 + XTS 1536 bit + boot-mode         | Full-Disk Encryption (FDE)\r\n  13721 | VeraCrypt SHA512 + XTS 512 bit                      | Full-Disk Encryption (FDE)\r\n  13722 | VeraCrypt SHA512 + XTS 1024 bit                     | Full-Disk Encryption (FDE)\r\n  13723 | VeraCrypt SHA512 + XTS 1536 bit                     | Full-Disk Encryption (FDE)\r\n  13771 | VeraCrypt Streebog-512 + XTS 512 bit                | Full-Disk Encryption (FDE)\r\n  13772 | VeraCrypt Streebog-512 + XTS 1024 bit               | Full-Disk Encryption (FDE)\r\n  13773 | VeraCrypt Streebog-512 + XTS 1536 bit               | Full-Disk Encryption (FDE)\r\n  13781 | VeraCrypt Streebog-512 + XTS 512 bit + boot-mode    | Full-Disk Encryption (FDE)\r\n  13782 | VeraCrypt Streebog-512 + XTS 1024 bit + boot-mode   | Full-Disk Encryption (FDE)\r\n  13783 | VeraCrypt Streebog-512 + XTS 1536 bit + boot-mode   | Full-Disk Encryption (FDE)\r\n  13731 | VeraCrypt Whirlpool + XTS 512 bit                   | Full-Disk Encryption (FDE)\r\n  13732 | VeraCrypt Whirlpool + XTS 1024 bit                  | Full-Disk Encryption (FDE)\r\n  13733 | VeraCrypt Whirlpool + XTS 1536 bit                  | Full-Disk Encryption (FDE)\r\n  23900 | BestCrypt v3 Volume Encryption                      | Full-Disk Encryption (FDE)\r\n  16700 | FileVault 2                                         | Full-Disk Encryption (FDE)\r\n  27500 | VirtualBox (PBKDF2-HMAC-SHA256 & AES-128-XTS)       | Full-Disk Encryption (FDE)\r\n  27600 | VirtualBox (PBKDF2-HMAC-SHA256 & AES-256-XTS)       | Full-Disk Encryption (FDE)\r\n  20011 | DiskCryptor SHA512 + XTS 512 bit                    | Full-Disk Encryption (FDE)\r\n  20012 | DiskCryptor SHA512 + XTS 1024 bit                   | Full-Disk Encryption (FDE)\r\n  20013 | DiskCryptor SHA512 + XTS 1536 bit                   | Full-Disk Encryption (FDE)\r\n  22100 | BitLocker                                           | Full-Disk Encryption (FDE)\r\n  12900 | Android FDE (Samsung DEK)                           | Full-Disk Encryption (FDE)\r\n   8800 | Android FDE <= 4.3                                  | Full-Disk Encryption (FDE)\r\n  18300 | Apple File System (APFS)                            | Full-Disk Encryption (FDE)\r\n   6211 | TrueCrypt RIPEMD160 + XTS 512 bit                   | Full-Disk Encryption (FDE)\r\n   6212 | TrueCrypt RIPEMD160 + XTS 1024 bit                  | Full-Disk Encryption (FDE)\r\n   6213 | TrueCrypt RIPEMD160 + XTS 1536 bit                  | Full-Disk Encryption (FDE)\r\n   6241 | TrueCrypt RIPEMD160 + XTS 512 bit + boot-mode       | Full-Disk Encryption (FDE)\r\n   6242 | TrueCrypt RIPEMD160 + XTS 1024 bit + boot-mode      | Full-Disk Encryption (FDE)\r\n   6243 | TrueCrypt RIPEMD160 + XTS 1536 bit + boot-mode      | Full-Disk Encryption (FDE)\r\n   6221 | TrueCrypt SHA512 + XTS 512 bit                      | Full-Disk Encryption (FDE)\r\n   6222 | TrueCrypt SHA512 + XTS 1024 bit                     | Full-Disk Encryption (FDE)\r\n   6223 | TrueCrypt SHA512 + XTS 1536 bit                     | Full-Disk Encryption (FDE)\r\n   6231 | TrueCrypt Whirlpool + XTS 512 bit                   | Full-Disk Encryption (FDE)\r\n   6232 | TrueCrypt Whirlpool + XTS 1024 bit                  | Full-Disk Encryption (FDE)\r\n   6233 | TrueCrypt Whirlpool + XTS 1536 bit                  | Full-Disk Encryption (FDE)\r\n  12200 | eCryptfs                                            | Full-Disk Encryption (FDE)\r\n  10400 | PDF 1.1 - 1.3 (Acrobat 2 - 4)                       | Document\r\n  10410 | PDF 1.1 - 1.3 (Acrobat 2 - 4), collider #1          | Document\r\n  10420 | PDF 1.1 - 1.3 (Acrobat 2 - 4), collider #2          | Document\r\n  10500 | PDF 1.4 - 1.6 (Acrobat 5 - 8)                       | Document\r\n  25400 | PDF 1.4 - 1.6 (Acrobat 5 - 8) - user and owner pass | Document\r\n  10600 | PDF 1.7 Level 3 (Acrobat 9)                         | Document\r\n  10700 | PDF 1.7 Level 8 (Acrobat 10 - 11)                   | Document\r\n   9400 | MS Office 2007                                      | Document\r\n   9500 | MS Office 2010                                      | Document\r\n   9600 | MS Office 2013                                      | Document\r\n  25300 | MS Office 2016 - SheetProtection                    | Document\r\n   9700 | MS Office <= 2003 $0/$1, MD5 + RC4                  | Document\r\n   9710 | MS Office <= 2003 $0/$1, MD5 + RC4, collider #1     | Document\r\n   9720 | MS Office <= 2003 $0/$1, MD5 + RC4, collider #2     | Document\r\n   9810 | MS Office <= 2003 $3, SHA1 + RC4, collider #1       | Document\r\n   9820 | MS Office <= 2003 $3, SHA1 + RC4, collider #2       | Document\r\n   9800 | MS Office <= 2003 $3/$4, SHA1 + RC4                 | Document\r\n  18400 | Open Document Format (ODF) 1.2 (SHA-256, AES)       | Document\r\n  18600 | Open Document Format (ODF) 1.1 (SHA-1, Blowfish)    | Document\r\n  16200 | Apple Secure Notes                                  | Document\r\n  23300 | Apple iWork                                         | Document\r\n   6600 | 1Password, agilekeychain                            | Password Manager\r\n   8200 | 1Password, cloudkeychain                            | Password Manager\r\n   9000 | Password Safe v2                                    | Password Manager\r\n   5200 | Password Safe v3                                    | Password Manager\r\n   6800 | LastPass + LastPass sniffed                         | Password Manager\r\n  13400 | KeePass 1 (AES/Twofish) and KeePass 2 (AES)         | Password Manager\r\n  23400 | Bitwarden                                           | Password Manager\r\n  16900 | Ansible Vault                                       | Password Manager\r\n  26000 | Mozilla key3.db                                     | Password Manager\r\n  26100 | Mozilla key4.db                                     | Password Manager\r\n  23100 | Apple Keychain                                      | Password Manager\r\n  11600 | 7-Zip                                               | Archive\r\n  12500 | RAR3-hp                                             | Archive\r\n  23800 | RAR3-p (Compressed)                                 | Archive\r\n  23700 | RAR3-p (Uncompressed)                               | Archive\r\n  13000 | RAR5                                                | Archive\r\n  17220 | PKZIP (Compressed Multi-File)                       | Archive\r\n  17200 | PKZIP (Compressed)                                  | Archive\r\n  17225 | PKZIP (Mixed Multi-File)                            | Archive\r\n  17230 | PKZIP (Mixed Multi-File Checksum-Only)              | Archive\r\n  17210 | PKZIP (Uncompressed)                                | Archive\r\n  20500 | PKZIP Master Key                                    | Archive\r\n  20510 | PKZIP Master Key (6 byte optimization)              | Archive\r\n  23001 | SecureZIP AES-128                                   | Archive\r\n  23002 | SecureZIP AES-192                                   | Archive\r\n  23003 | SecureZIP AES-256                                   | Archive\r\n  13600 | WinZip                                              | Archive\r\n  18900 | Android Backup                                      | Archive\r\n  24700 | Stuffit5                                            | Archive\r\n  13200 | AxCrypt 1                                           | Archive\r\n  13300 | AxCrypt 1 in-memory SHA1                            | Archive\r\n  23500 | AxCrypt 2 AES-128                                   | Archive\r\n  23600 | AxCrypt 2 AES-256                                   | Archive\r\n  14700 | iTunes backup < 10.0                                | Archive\r\n  14800 | iTunes backup >= 10.0                               | Archive\r\n   8400 | WBB3 (Woltlab Burning Board)                        | Forums, CMS, E-Commerce\r\n   2612 | PHPS                                                | Forums, CMS, E-Commerce\r\n    121 | SMF (Simple Machines Forum) > v1.1                  | Forums, CMS, E-Commerce\r\n   3711 | MediaWiki B type                                    | Forums, CMS, E-Commerce\r\n   4521 | Redmine                                             | Forums, CMS, E-Commerce\r\n  24800 | Umbraco HMAC-SHA1                                   | Forums, CMS, E-Commerce\r\n     11 | Joomla < 2.5.18                                     | Forums, CMS, E-Commerce\r\n  13900 | OpenCart                                            | Forums, CMS, E-Commerce\r\n  11000 | PrestaShop                                          | Forums, CMS, E-Commerce\r\n  16000 | Tripcode                                            | Forums, CMS, E-Commerce\r\n   7900 | Drupal7                                             | Forums, CMS, E-Commerce\r\n   4522 | PunBB                                               | Forums, CMS, E-Commerce\r\n   2811 | MyBB 1.2+, IPB2+ (Invision Power Board)             | Forums, CMS, E-Commerce\r\n   2611 | vBulletin < v3.8.5                                  | Forums, CMS, E-Commerce\r\n   2711 | vBulletin >= v3.8.5                                 | Forums, CMS, E-Commerce\r\n  25600 | bcrypt(md5($pass)) / bcryptmd5                      | Forums, CMS, E-Commerce\r\n  25800 | bcrypt(sha1($pass)) / bcryptsha1                    | Forums, CMS, E-Commerce\r\n     21 | osCommerce, xt:Commerce                             | Forums, CMS, E-Commerce\r\n  18100 | TOTP (HMAC-SHA1)                                    | One-Time Password\r\n   2000 | STDOUT                                              | Plaintext\r\n  99999 | Plaintext                                           | Plaintext\r\n  21600 | Web2py pbkdf2-sha512                                | Framework\r\n  10000 | Django (PBKDF2-SHA256)                              | Framework\r\n    124 | Django (SHA-1)                                      | Framework\r\n  12001 | Atlassian (PBKDF2-HMAC-SHA1)                        | Framework\r\n  19500 | Ruby on Rails Restful-Authentication                | Framework\r\n  27200 | Ruby on Rails Restful Auth (one round, no sitekey)  | Framework\r\n  20200 | Python passlib pbkdf2-sha512                        | Framework\r\n  20300 | Python passlib pbkdf2-sha256                        | Framework\r\n  20400 | Python passlib pbkdf2-sha1                          | Framework\r\n  24410 | PKCS#8 Private Keys (PBKDF2-HMAC-SHA1 + 3DES/AES)   | Private Key\r\n  24420 | PKCS#8 Private Keys (PBKDF2-HMAC-SHA256 + 3DES/AES) | Private Key\r\n  15500 | JKS Java Key Store Private Keys (SHA1)              | Private Key\r\n  22911 | RSA/DSA/EC/OpenSSH Private Keys ($0$)               | Private Key\r\n  22921 | RSA/DSA/EC/OpenSSH Private Keys ($6$)               | Private Key\r\n  22931 | RSA/DSA/EC/OpenSSH Private Keys ($1, $3$)           | Private Key\r\n  22941 | RSA/DSA/EC/OpenSSH Private Keys ($4$)               | Private Key\r\n  22951 | RSA/DSA/EC/OpenSSH Private Keys ($5$)               | Private Key\r\n  23200 | XMPP SCRAM PBKDF2-SHA1                              | Instant Messaging Service\r\n  22600 | Telegram Desktop < v2.1.14 (PBKDF2-HMAC-SHA1)       | Instant Messaging Service\r\n  24500 | Telegram Desktop >= v2.1.14 (PBKDF2-HMAC-SHA512)    | Instant Messaging Service\r\n  22301 | Telegram Mobile App Passcode (SHA256)               | Instant Messaging Service\r\n     23 | Skype                                               | Instant Messaging Service\r\n  26600 | MetaMask Wallet                                     | Cryptocurrency Wallet\r\n  21000 | BitShares v0.x - sha512(sha512_bin(pass))           | Cryptocurrency Wallet\r\n  11300 | Bitcoin/Litecoin wallet.dat                         | Cryptocurrency Wallet\r\n  16600 | Electrum Wallet (Salt-Type 1-3)                     | Cryptocurrency Wallet\r\n  21700 | Electrum Wallet (Salt-Type 4)                       | Cryptocurrency Wallet\r\n  21800 | Electrum Wallet (Salt-Type 5)                       | Cryptocurrency Wallet\r\n  12700 | Blockchain, My Wallet                               | Cryptocurrency Wallet\r\n  15200 | Blockchain, My Wallet, V2                           | Cryptocurrency Wallet\r\n  18800 | Blockchain, My Wallet, Second Password (SHA256)     | Cryptocurrency Wallet\r\n  25500 | Stargazer Stellar Wallet XLM                        | Cryptocurrency Wallet\r\n  16300 | Ethereum Pre-Sale Wallet, PBKDF2-HMAC-SHA256        | Cryptocurrency Wallet\r\n  15600 | Ethereum Wallet, PBKDF2-HMAC-SHA256                 | Cryptocurrency Wallet\r\n  15700 | Ethereum Wallet, SCRYPT                             | Cryptocurrency Wallet\r\n  22500 | MultiBit Classic .key (MD5)                         | Cryptocurrency Wallet\r\n  27700 | MultiBit Classic .wallet (scrypt)                   | Cryptocurrency Wallet\r\n  22700 | MultiBit HD (scrypt)                                | Cryptocurrency Wallet\r\n\r\n- [ Brain Client Features ] -\r\n\r\n  # | Features\r\n ===+========\r\n  1 | Send hashed passwords\r\n  2 | Send attack positions\r\n  3 | Send hashed passwords and attack positions\r\n\r\n- [ Outfile Formats ] -\r\n\r\n  # | Format\r\n ===+========\r\n  1 | hash[:salt]\r\n  2 | plain\r\n  3 | hex_plain\r\n  4 | crack_pos\r\n  5 | timestamp absolute\r\n  6 | timestamp relative\r\n\r\n- [ Rule Debugging Modes ] -\r\n\r\n  # | Format\r\n ===+========\r\n  1 | Finding-Rule\r\n  2 | Original-Word\r\n  3 | Original-Word:Finding-Rule\r\n  4 | Original-Word:Finding-Rule:Processed-Word\r\n\r\n- [ Attack Modes ] -\r\n\r\n  # | Mode\r\n ===+======\r\n  0 | Straight\r\n  1 | Combination\r\n  3 | Brute-force\r\n  6 | Hybrid Wordlist + Mask\r\n  7 | Hybrid Mask + Wordlist\r\n  9 | Association\r\n\r\n- [ Built-in Charsets ] -\r\n\r\n  ? | Charset\r\n ===+=========\r\n  l | abcdefghijklmnopqrstuvwxyz [a-z]\r\n  u | ABCDEFGHIJKLMNOPQRSTUVWXYZ [A-Z]\r\n  d | 0123456789                 [0-9]\r\n  h | 0123456789abcdef           [0-9a-f]\r\n  H | 0123456789ABCDEF           [0-9A-F]\r\n  s |  !\"#$%&\'()*+,-./:;<=>?@[\\]^_`{|}~\r\n  a | ?l?u?d?s\r\n  b | 0x00 - 0xff\r\n\r\n- [ OpenCL Device Types ] -\r\n\r\n  # | Device Type\r\n ===+=============\r\n  1 | CPU\r\n  2 | GPU\r\n  3 | FPGA, DSP, Co-Processor\r\n\r\n- [ Workload Profiles ] -\r\n\r\n  # | Performance | Runtime | Power Consumption | Desktop Impact\r\n ===+=============+=========+===================+=================\r\n  1 | Low         |   2 ms  | Low               | Minimal\r\n  2 | Default     |  12 ms  | Economic          | Noticeable\r\n  3 | High        |  96 ms  | High              | Unresponsive\r\n  4 | Nightmare   | 480 ms  | Insane            | Headless\r\n\r\n- [ License ] -\r\n\r\n  hashcat is licensed under the MIT license\r\n  Copyright and license terms are listed in docs/license.txt\r\n\r\n- [ Basic Examples ] -\r\n\r\n  Attack-          | Hash- |\r\n  Mode             | Type  | Example command\r\n ==================+=======+==================================================================\r\n  Wordlist         | $P$   | hashcat -a 0 -m 400 example400.hash example.dict\r\n  Wordlist + Rules | MD5   | hashcat -a 0 -m 0 example0.hash example.dict -r rules/best64.rule\r\n  Brute-Force      | MD5   | hashcat -a 3 -m 0 example0.hash ?a?a?a?a?a?a\r\n  Combinator       | MD5   | hashcat -a 1 -m 0 example0.hash example.dict example.dict\r\n  Association      | $1$   | hashcat -a 9 -m 500 example500.hash 1word.dict -r rules/best64.rule\r\n\r\nIf you still have no idea what just happened, try the following pages:\r\n\r\n* https://hashcat.net/wiki/#howtos_videos_papers_articles_etc_in_the_wild\r\n* https://hashcat.net/faq/\r\n\r\nIf you think you need help by a real human come to the hashcat Discord:\r\n\r\n* https://hashcat.net/discord\r\n');
INSERT INTO `herramientas` (`id_herramienta`, `nombre_herramienta`, `ayuda_herramienta`) VALUES
(16, 'Unicornscan', 'unicornscan (version 0.4.7)\r\nusage: unicornscan [options `b:B:cd:De:EFG:hHi:Ij:l:L:m:M:o:p:P:q:Qr:R:s:St:T:u:Uw:W:vVzZ:\' ] X.X.X.X/YY:S-E\r\n        -b, --broken-crc     *set broken crc sums on [T]ransport layer, [N]etwork layer, or both[TN]\r\n        -B, --source-port    *set source port? or whatever the scan module expects as a number\r\n        -c, --proc-duplicates process duplicate replies\r\n        -d, --delay-type     *set delay type (numeric value, valid options are `1:tsc 2:gtod 3:sleep\')\r\n        -D, --no-defpayload   no default Payload, only probe known protocols\r\n        -e, --enable-module  *enable modules listed as arguments (output and report currently)\r\n        -E, --proc-errors     for processing `non-open\' responses (icmp errors, tcp rsts...)\r\n        -F, --try-frags       \r\n        -G, --payload-group     *payload group (numeric) for tcp/udp type payload selection (default all)\r\n        -h, --help            help\r\n        -H, --do-dns          resolve hostnames during the reporting phase\r\n        -i, --interface      *interface name, like eth0 or fxp1, not normally required\r\n        -I, --immediate       immediate mode, display things as we find them\r\n        -j, --ignore-seq     *ignore `A\'ll, \'R\'eset sequence numbers for tcp header validation\r\n        -l, --logfile        *write to this file not my terminal\r\n        -L, --packet-timeout *wait this long for packets to come back (default 7 secs)\r\n        -m, --mode           *scan mode, tcp (syn) scan is default, U for udp T for tcp `sf\' for tcp connect scan and A for arp\r\n                               for -mT you can also specify tcp flags following the T like -mTsFpU for example\r\n                               that would send tcp syn packets with (NO Syn|FIN|NO Push|URG)\r\n        -M, --module-dir     *directory modules are found at (defaults to /usr/lib/unicornscan/modules)\r\n        -o, --format         *format of what to display for replies, see man page for format specification\r\n        -p, --ports           global ports to scan, if not specified in target options\r\n        -P, --pcap-filter    *extra pcap filter string for reciever\r\n        -q, --covertness     *covertness value from 0 to 255\r\n        -Q, --quiet           dont use output to screen, its going somewhere else (a database say...)\r\n        -r, --pps            *packets per second (total, not per host, and as you go higher it gets less accurate)\r\n        -R, --repeats        *repeat packet scan N times\r\n        -s, --source-addr    *source address for packets `r\' for random\r\n        -S, --no-shuffle      do not shuffle ports\r\n        -t, --ip-ttl         *set TTL on sent packets as in 62 or 6-16 or r64-128\r\n        -T, --ip-tos         *set TOS on sent packets\r\n        -u, --debug             *debug mask\r\n        -U, --no-openclosed      dont say open or closed\r\n        -w, --safefile       *write pcap file of recieved packets\r\n        -W, --fingerprint    *OS fingerprint 0=cisco(def) 1=openbsd 2=WindowsXP 3=p0fsendsyn 4=FreeBSD 5=nmap\r\n                              6=linux 7:strangetcp\r\n        -v, --verbose         verbose (each time more verbose so -vvvvv is really verbose)\r\n        -V, --version         display version\r\n        -z, --sniff           sniff alike\r\n        -Z, --drone-str      *drone String\r\n*:      options with `*\' require an argument following them\r\n\r\n  address ranges are cidr like 1.2.3.4/8 for all of 1.?.?.?\r\n  if you omit the cidr mask then /32 is implied\r\n  port ranges are like 1-4096 with 53 only scanning one port, a for all 65k and p for 1-1024\r\nexample: unicornscan -i eth1 -Ir 160 -E 192.168.1.0/24:1-4000 gateway:a\r\n'),
(17, 'Legion', 'Interfaz grafica, muestra, puertos, servicios, exploits, CVE, contraseñas, usuarios.'),
(18, 'hash-identifier', 'Hash types this tool can positively identify:\r\n\r\nMD5\r\nSHA1 (SHA128)\r\nSHA2 (SHA256)\r\nSHA512\r\nMySQL\r\nMD5 Wordpress\r\nMD5 phpBB\r\nBCRYPT\r\nMD5-Crypt\r\nOracle\r\nSHA-Crypt\r\nPHPS\r\nand more…'),
(19, 'Hydra', 'Hydra v9.3 (c) 2022 by van Hauser/THC & David Maciejak - Please do not use in military or secret service organizations, or for illegal purposes (this is non-binding, these *** ignore laws and ethics anyway).\r\n\r\nSyntax: hydra [[[-l LOGIN|-L FILE] [-p PASS|-P FILE]] | [-C FILE]] [-e nsr] [-o FILE] [-t TASKS] [-M FILE [-T TASKS]] [-w TIME] [-W TIME] [-f] [-s PORT] [-x MIN:MAX:CHARSET] [-c TIME] [-ISOuvVd46] [-m MODULE_OPT] [service://server[:PORT][/OPT]]\r\n\r\nOptions:\r\n  -l LOGIN or -L FILE  login with LOGIN name, or load several logins from FILE\r\n  -p PASS  or -P FILE  try password PASS, or load several passwords from FILE\r\n  -C FILE   colon separated \"login:pass\" format, instead of -L/-P options\r\n  -M FILE   list of servers to attack, one entry per line, \':\' to specify port\r\n  -t TASKS  run TASKS number of connects in parallel per target (default: 16)\r\n  -U        service module usage details\r\n  -m OPT    options specific for a module, see -U output for information\r\n  -h        more command line options (COMPLETE HELP)\r\n  server    the target: DNS, IP or 192.168.0.0/24 (this OR the -M option)\r\n  service   the service to crack (see below for supported protocols)\r\n  OPT       some service modules support additional input (-U for module help)\r\n\r\nSupported services: adam6500 asterisk cisco cisco-enable cobaltstrike cvs firebird ftp[s] http[s]-{head|get|post} http[s]-{get|post}-form http-proxy http-proxy-urlenum icq imap[s] irc ldap2[s] ldap3[-{cram|digest}md5][s] memcached mongodb mssql mysql nntp oracle-listener oracle-sid pcanywhere pcnfs pop3[s] postgres radmin2 rdp redis rexec rlogin rpcap rsh rtsp s7-300 sip smb smtp[s] smtp-enum snmp socks5 ssh sshkey svn teamspeak telnet[s] vmauthd vnc xmpp\r\n\r\nHydra is a tool to guess/crack valid login/password pairs.\r\nLicensed under AGPL v3.0. The newest version is always available at;\r\nhttps://github.com/vanhauser-thc/thc-hydra\r\nPlease don\'t use in military or secret service organizations, or for illegal\r\npurposes. (This is a wish and non-binding - most such people do not care about\r\nlaws and ethics anyway - and tell themselves they are one of the good ones.)\r\n\r\nExample:  hydra -l user -P passlist.txt ftp://192.168.0.1\r\n'),
(20, 'aircrack-ng', '');

--
-- Índices para tablas volcadas
--

--
-- Indices de la tabla `comandos`
--
ALTER TABLE `comandos`
  ADD PRIMARY KEY (`id_comando`),
  ADD KEY `id_fase` (`id_fase`),
  ADD KEY `id_herramienta` (`id_herramienta`);

--
-- Indices de la tabla `fases`
--
ALTER TABLE `fases`
  ADD PRIMARY KEY (`id_fase`);

--
-- Indices de la tabla `herramientas`
--
ALTER TABLE `herramientas`
  ADD PRIMARY KEY (`id_herramienta`);

--
-- AUTO_INCREMENT de las tablas volcadas
--

--
-- AUTO_INCREMENT de la tabla `comandos`
--
ALTER TABLE `comandos`
  MODIFY `id_comando` int(11) NOT NULL AUTO_INCREMENT, AUTO_INCREMENT=25;

--
-- AUTO_INCREMENT de la tabla `fases`
--
ALTER TABLE `fases`
  MODIFY `id_fase` int(11) NOT NULL AUTO_INCREMENT, AUTO_INCREMENT=8;

--
-- AUTO_INCREMENT de la tabla `herramientas`
--
ALTER TABLE `herramientas`
  MODIFY `id_herramienta` int(11) NOT NULL AUTO_INCREMENT, AUTO_INCREMENT=21;

--
-- Restricciones para tablas volcadas
--

--
-- Filtros para la tabla `comandos`
--
ALTER TABLE `comandos`
  ADD CONSTRAINT `comandos_ibfk_1` FOREIGN KEY (`id_fase`) REFERENCES `fases` (`id_fase`) ON UPDATE CASCADE,
  ADD CONSTRAINT `comandos_ibfk_2` FOREIGN KEY (`id_herramienta`) REFERENCES `herramientas` (`id_herramienta`) ON UPDATE CASCADE;
COMMIT;

/*!40101 SET CHARACTER_SET_CLIENT=@OLD_CHARACTER_SET_CLIENT */;
/*!40101 SET CHARACTER_SET_RESULTS=@OLD_CHARACTER_SET_RESULTS */;
/*!40101 SET COLLATION_CONNECTION=@OLD_COLLATION_CONNECTION */;
